package com.socialization.domain;

import java.io.Serializable;
import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;

import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;

import org.springframework.core.annotation.Order;



/**
 * 
 * 用户
 * @author socializationComputing
 *
 */
@SuppressWarnings("serial")
@Entity
public class User implements Serializable{
	
	private Long id;
	private String name; //昵称
	private String loginName; //登录名
	private String password; //密码
	private Date birthday; //生日
	private String education; //学历
	private String email; //
	private String telphone;
	private Long qq;
	private Date registTime; //注册时间
	private String headImage; //头像
	private String usTags;  //标签

	private int resUpCount;  //资源上传数量
	
	public int getResUpCount() {
		return resUpCount;
	}
	public void setResUpCount(int resUpCount) {
		this.resUpCount = resUpCount;
	}
	private Role role;

	private Set<Reply> replys = new HashSet<Reply>();
	private Set<Topic> topics = new HashSet<Topic>();
	private Set<Talk> talks = new HashSet<Talk>();
	private Set<TalkReply> talksReplys = new HashSet<TalkReply>();
	private Set<Resource> resources = new HashSet<Resource>();
	private Set<ResReply> resReplys = new HashSet<ResReply>();
	private Set<Notice> notices = new HashSet<Notice>();
	private Set<Message> oneMsgs = new HashSet<Message>(); //当前用户发的消息
	private Set<Message> anotherMsgs = new HashSet<Message>(); //好友发的消息
	
	private Set<User> users = new HashSet<User>();
	private Set<User> friends = new HashSet<User>();
	private Set<Tag> tags = new HashSet<Tag>();
	private Set<Topic> collectionTopics = new HashSet<Topic>();
	private Set<Resource> collectionResources = new HashSet<Resource>();
	/*private List<Resource> collectionResources;*/
	private Set<Resource> downsResources=new HashSet<Resource>();
	
	@Id
	@GeneratedValue
	public Long getId() {
		return id;
	}
	public void setId(Long id) {
		this.id = id;
	}
	
	@Column(name = "name", length = 100)
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	
	public String getLoginName() {
		return loginName;
	}
	public void setLoginName(String loginName) {
		this.loginName = loginName;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	@ManyToMany(mappedBy="users")
	public Set<Tag> getTags() {
		return tags;
	}
	public void setTags(Set<Tag> tags) {
		this.tags = tags;
	}
	
	@OneToMany(mappedBy="user")
	public Set<Topic> getTopics() {
		return topics;
	}
	public void setTopics(Set<Topic> topics) {
		this.topics = topics;
	}
	@OneToMany(mappedBy="user")
	public Set<Reply> getReplys() {
		return replys;
	}
	public void setReplys(Set<Reply> replys) {
		this.replys = replys;
	}
	@ManyToOne
	@JoinColumn(name="roleId")
	public Role getRole() {
		return role;
	}
	public void setRole(Role role) {
		this.role = role;
	}
	@OneToMany(mappedBy="user")
	public Set<Talk> getTalks() {
		return talks;
	}
	public void setTalks(Set<Talk> talks) {
		this.talks = talks;
	}
	@OneToMany(mappedBy="user")
	public Set<TalkReply> getTalksReplys() {
		return talksReplys;
	}
	public void setTalksReplys(Set<TalkReply> talksReplys) {
		this.talksReplys = talksReplys;
	}
	@OneToMany(mappedBy="user")
	public Set<Resource> getResources() {
		return resources;
	}
	public void setResources(Set<Resource> resources) {
		this.resources = resources;
	}
	@OneToMany(mappedBy="user")
	public Set<ResReply> getResReplys() {
		return resReplys;
	}
	public void setResReplys(Set<ResReply> resReplys) {
		this.resReplys = resReplys;
	}
	@OneToMany(mappedBy="user")
	public Set<Notice> getNotices() {
		return notices;
	}
	public void setNotices(Set<Notice> notices) {
		this.notices = notices;
	}
	@ManyToMany
	@OrderBy("id ASC")
	@JoinTable(name="user_friend",
			joinColumns={@JoinColumn(name="userId")},
			inverseJoinColumns={@JoinColumn(name="friendId")}
			)
	public Set<User> getUsers() {
		return users;
	}
	public void setUsers(Set<User> users) {
		this.users = users;
	}
	@ManyToMany
	@OrderBy("id ASC")
	@JoinTable(name="user_friend",
			joinColumns={@JoinColumn(name="friendId")},
			inverseJoinColumns={@JoinColumn(name="userId")}
			)
	public Set<User> getFriends() {
		return friends;
	}
	public void setFriends(Set<User> friends) {
		this.friends = friends;
	}
	@ManyToMany(fetch=FetchType.EAGER)
	@OrderBy("postTime DESC")
	@JoinTable(name="topic_user",
			joinColumns={@JoinColumn(name="userId")},
			inverseJoinColumns={@JoinColumn(name="topicId")}
			
		)
	public Set<Topic> getCollectionTopics() {
		return collectionTopics;
	}
	public void setCollectionTopics(Set<Topic> collectionTopics) {
		this.collectionTopics = collectionTopics;
	}
	
	
	public Date getBirthday() {
		return birthday;
	}
	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}
	public String getEducation() {
		return education;
	}
	public void setEducation(String education) {
		this.education = education;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getTelphone() {
		return telphone;
	}
	public void setTelphone(String telphone) {
		this.telphone = telphone;
	}
	public Long getQq() {
		return qq;
	}
	public void setQq(Long qq) {
		this.qq = qq;
	}
	public Date getRegistTime() {
		return registTime;
	}
	public void setRegistTime(Date registTime) {
		this.registTime = registTime;
	}
	@ManyToMany
	@JoinTable(name="user_resource",
		joinColumns={@JoinColumn(name="userId")},
		inverseJoinColumns={@JoinColumn(name="resourceId")}
	)
	public Set<Resource> getCollectionResources() {
		return collectionResources;
	}
	public void setCollectionResources(Set<Resource> collectionResources) {
		this.collectionResources = collectionResources;
	}
	public String getHeadImage() {
		return headImage;
	}
	public void setHeadImage(String headImage) {
		this.headImage = headImage;
	}
	@OneToMany(mappedBy="user")
	public Set<Message> getOneMsgs() {
		return oneMsgs;
	}
	public void setOneMsgs(Set<Message> oneMsgs) {
		this.oneMsgs = oneMsgs;
	}
	@OneToMany(mappedBy="friend")
	public Set<Message> getAnotherMsgs() {
		return anotherMsgs;
	}
	public void setAnotherMsgs(Set<Message> anotherMsgs) {
		this.anotherMsgs = anotherMsgs;
	}
	
	
	@ManyToMany
	@JoinTable(name="user_downresource",
		joinColumns={@JoinColumn(name="userId")},
		inverseJoinColumns={@JoinColumn(name="resourceId")}
	)
	public Set<Resource> getDownsResources() {
		return downsResources;
	}
	public void setDownsResources(Set<Resource> downsResources) {
		this.downsResources = downsResources;
	}
	public String getUsTags() {
		return usTags;
	}
	public void setUsTags(String usTags) {
		this.usTags = usTags;
	}
/*	public int getUpCount() {
		return upCount;
	}
	public void setUpCount(int upCount) {
		this.upCount = upCount;
	}*/
	public int getResUpCount() {
		return resUpCount;
	}
	public void setResUpCount(int resUpCount) {
		this.resUpCount = resUpCount;
	}

}
