package com.socialization.domain;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * 
 * 资源
 * @author socializationComputing
 *
 */
@SuppressWarnings("serial")
@Entity
public class Resource implements Serializable{
	
	private Long id;
	private String name;
	private String description;
	private String path;//资源路径
	private Date postTime; //时间
	private String ipAddr; //ip
	private int repCount; // 评论数量
	private int score; // 资源评分
	private int haopingCount; // 好评数量
	private int chapingCount; // 差评数量

	private int collectionCount;// 收藏数量
	private ResType resType;
	private User user;
	
	private Set<ResReply> resReplys = new HashSet<ResReply>();
	private Set<User> users = new HashSet<User>(); //用户收藏的资源
	
	private Set<Tag> tags = new HashSet<Tag>();
	private Set<User> userdownloads=new HashSet<User>();  //用户下载的资源
	
	@Id
	@GeneratedValue
	public Long getId() {
		return id;
	}
	public void setId(Long id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getDescription() {
		return description;
	}
	public void setDescription(String description) {
		this.description = description;
	}
	@Temporal(TemporalType.TIMESTAMP)
	public Date getPostTime() {
		return postTime;
	}
	public void setPostTime(Date postTime) {
		this.postTime = postTime;
	}
	public String getIpAddr() {
		return ipAddr;
	}
	public void setIpAddr(String ipAddr) {
		this.ipAddr = ipAddr;
	}
	
	@ManyToMany
	@JoinTable(name="resouce_tag",
		joinColumns={@JoinColumn(name="resouceId")},
		inverseJoinColumns={@JoinColumn(name="tagId")}
		
	)
	public Set<Tag> getTags() {
		return tags;
	}
	public void setTags(Set<Tag> tags) {
		this.tags = tags;
	}
	@ManyToOne
	@JoinColumn(name="resTypeId")
	public ResType getResType() {
		return resType;
	}
	public void setResType(ResType resType) {
		this.resType = resType;
	}
	@ManyToOne
	@JoinColumn(name="userId")
	public User getUser() {
		return user;
	}
	public void setUser(User user) {
		this.user = user;
	}
	@OneToMany(mappedBy="resource")
	public Set<ResReply> getResReplys() {
		return resReplys;
	}
	public void setResReplys(Set<ResReply> resReplys) {
		this.resReplys = resReplys;
	}
	
	@ManyToMany(mappedBy="collectionResources")
	public Set<User> getUsers() {
		return users;
	}
	public void setUsers(Set<User> users) {
		this.users = users;
	}
	public String getPath() {
		return path;
	}
	public void setPath(String path) {
		this.path = path;
	}
	@ManyToMany(mappedBy="downsResources")
	public Set<User> getUserdownloads() {
		return userdownloads;
	}
	public void setUserdownloads(Set<User> userdownloads) {
		this.userdownloads = userdownloads;
	}
	public int getHaopingCount() {
		return haopingCount;
	}
	public void setHaopingCount(int haopingCount) {
		this.haopingCount = haopingCount;
	}
	public int getRepCount() {
		return repCount;
	}
	public void setRepCount(int repCount) {
		this.repCount = repCount;
	}
	public int getScore() {
		return score;
	}
	public void setScore(int score) {
		this.score = score;
	}
	public int getChapingCount() {
		return chapingCount;
	}
	public void setChapingCount(int chapingCount) {
		this.chapingCount = chapingCount;
	}
	public int getCollectionCount() {
		return collectionCount;
	}
	public void setCollectionCount(int collectionCount) {
		this.collectionCount = collectionCount;
	}
	
	
	
}
