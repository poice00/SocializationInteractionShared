package com.socialization.util;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts2.ServletActionContext;

import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionInvocation;
import com.opensymphony.xwork2.interceptor.Interceptor;
import com.socialization.domain.User;


public class CheckInterceptor implements Interceptor{

	@Override
	public void destroy() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void init() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public String intercept(ActionInvocation invocation) throws Exception {
		User user = (User) ActionContext.getContext().getSession().get("user");
		String nameSpace = invocation.getProxy().getNamespace(); 
		String actionName = invocation.getProxy().getActionName();
		String priUrl = nameSpace + actionName;
		System.out.println("priurl="+priUrl);
		//如果用户为空
		if(user == null){
			//如果请求是下列的action，放行
		if(priUrl.startsWith("/user_login")||priUrl.startsWith("/forum_list")
			||priUrl.startsWith("/forum_show")||priUrl.startsWith("/topic_show")
			||priUrl.startsWith("/home_index")||priUrl.startsWith("home_title")
			||priUrl.startsWith("home_top")||priUrl.startsWith("home_blank")
			||priUrl.startsWith("home_mid")||priUrl.startsWith("home_bottom")
			||priUrl.startsWith("/forum_index") || priUrl.startsWith("/user_getUser")
			|| priUrl.startsWith("/user_signIn") || priUrl.startsWith("/user_regist")
			|| priUrl.startsWith("/user_isExist") || priUrl.startsWith("/user_getPrePage")){
				return invocation.invoke();
			}else{
			//否则转到登陆界面
				
				 ActionContext context = invocation.getInvocationContext();
				 Map<String, Object> session = context.getSession();
				// 获取HttpServletRequest对象
	            HttpServletRequest req = ServletActionContext.getRequest();
	            // 获取此请求的地址，请求地址包含application name，进行subString操作，去除application name
	           // String path = req.getRequestURI().substring(10);
	            // 获得请求中的参数
	            String queryString = req.getQueryString();
	            // 预防空指针
	            if (queryString == null) {
	                queryString = "";
	            }
	            // 拼凑得到登陆之前的地址
	            String realPath = actionName + ".action" + "?" + queryString;
	            System.out.println("=====realPath======="+realPath);
	            // 存入session，方便调用
	            session.put("prePage", realPath);
				return "loginUI";
			}
		}
		return invocation.invoke();
	}
	
}
