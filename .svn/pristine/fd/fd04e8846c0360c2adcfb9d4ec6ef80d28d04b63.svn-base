package com.socialization.action.resource;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Date;
import java.util.List;

import org.apache.struts2.ServletActionContext;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;


import com.opensymphony.xwork2.ActionContext;
import com.socialization.base.BaseAction;
import com.socialization.domain.Resource;


@SuppressWarnings("serial")
@Controller
@Scope("prototype")
public class UpdowncollectAction extends BaseAction<Resource> {
	
	
	public String uplist() throws Exception {     //  上传列表数据
		System.out.println("------------");
		List<Resource> upresList=updowncollectResService.getByuserupId(getCurrentUser());
		if (upresList != null) {
			ActionContext.getContext().put("upresList", upresList);
			System.out.println("+++++++++++");
			return "upresList";
		} else{
			System.out.println("***************");
			return "toupresList";
		}	
	}
	
	
	public String showupload() throws Exception{
		return "showupload";
	}
	
	
	public String downlist() throws Exception{     //下载列表数据           
		List<Resource> downReslist=updowncollectResService.getByuserdownId(getCurrentUser());
		//System.out.println(downReslist.size());
		if (downReslist!=null) {
			ActionContext.getContext().put("downReslist", downReslist);
			return "downlist";
		} else {
			return "todownlist";
		}
	}
	public String collectlist() throws Exception{  //收藏列表数据
		List<Resource> collResList=updowncollectResService.getByusercolleId(getCurrentUser());
		if (collResList!=null) {
			ActionContext.getContext().put("collResList", collResList);
			return "collectlist";
		} else {
			return "tocollectlist";
		}
		
	}
	
	public String showSingleRes() throws Exception{  //准备单个资源的页面数据
		Resource resource=updowncollectResService.getById(model.getId());
		ActionContext.getContext().put("resource", resource);
		return "showSingleRes";	
	}
	public String addUI() throws Exception{  //添加资源的页面
		return "addUI";
	}
	
     public String delete() throws Exception{  //删除资源的数据
		this.updowncollectResService.delete(model);
		return "delete";
	}
	
	public String upResCommit() throws Exception{   //资源上传提交，同时写入数据库
		byte[] buffer=new byte[102400];
		InputStream in=new FileInputStream(uploadfile);
		String filepath=ServletActionContext.getServletContext().getRealPath("/WEB-INF/upload/");
		String mm="user1";
		String filepath2=filepath+"/"+mm;
		File tmpFile = new File(filepath2);
		if (!tmpFile.exists()) {
		   //创建文件存放目录
		 tmpFile.mkdir();
		 }
		OutputStream out=new FileOutputStream(new File(filepath2+"/"+uploadfileFileName));
		
		int length= in.read(buffer);
		while (length>0){
			out.write(buffer);
			length=in.read(buffer);
		}
		in.close();
		out.flush();
		out.close();
		model.setIpAddr(ServletActionContext.getRequest().getRemoteAddr());
		model.setPath(filepath2+"/"+uploadfileFileName);
		model.setPostTime(new Date());
		model.setUser(getCurrentUser());
		/*model.setResSize(resSize);
		model.setResTags(resTags);
		model.setResType(resType);*/
		this.updowncollectResService.save(model);
		return "upResCommit";
	}
	
	private File uploadfile;
	private String uploadfileFileName;
	private String uploadfileContentType;


	public String getUploadfileFileName() {
		return uploadfileFileName;
	}
	public void setUploadfileFileName(String uploadfileFileName) {
		this.uploadfileFileName = uploadfileFileName;
	}
	public String getUploadfileContentType() {
		return uploadfileContentType;
	}
	public void setUploadfileContentType(String uploadfileContentType) {
		this.uploadfileContentType = uploadfileContentType;
	}
	public File getUploadfile() {
		return uploadfile;
	}

	public void setUploadfile(File uploadfile) {
		this.uploadfile = uploadfile;
	}
}
